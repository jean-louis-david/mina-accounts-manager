name: Build and Release Accounts-Manager Native Image

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build-and-release:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download and Extract GraalVM
        run: |
          wget https://download.oracle.com/graalvm/21/latest/graalvm-jdk-21_linux-x64_bin.tar.gz
          tar -xzf graalvm-jdk-21_linux-x64_bin.tar.gz
          sudo mkdir -p /usr/lib/jvm
          sudo mv graalvm-jdk-21.0.3+7.1 /usr/lib/jvm/graalvm

      - name: Set up GraalVM
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/graalvm" >> $GITHUB_ENV
          echo "PATH=/usr/lib/jvm/graalvm/bin:$PATH" >> $GITHUB_ENV
          source $GITHUB_ENV

      - name: Verify GraalVM Installation
        run: |
          source $GITHUB_ENV
          java -version
          native-image --version

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '8.5-rc-2'

      - name: Build Native Image
        run: |
          source $GITHUB_ENV
          ./gradlew nativeCompile

      - name: Confirm Native Image
        run: ls -l build/native/nativeCompile

      - name: Upload Native Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: accounts-manager-native
          path: build/native/nativeCompile/accounts-manager

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0  # Change this as necessary
          release_name: Release v1.0.0
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/native/nativeCompile/accounts-manager
          asset_name: accounts-manager
          asset_content_type: application/octet-stream
